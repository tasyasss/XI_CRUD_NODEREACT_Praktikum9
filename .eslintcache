[{"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\index.js":"1","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\App.js":"2","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\reportWebVitals.js":"3","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pages.js":"4","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\home.js":"5","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\login.js":"6","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pegawai.js":"7","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\components\\navbar.js":"8","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\register.js":"9","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran.js":"10","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\siswa.js":"11"},{"size":547,"mtime":1611240622459,"results":"12","hashOfConfig":"13"},{"size":294,"mtime":1613407013869,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":652,"mtime":1614226127251,"results":"16","hashOfConfig":"13"},{"size":3635,"mtime":1614215461913,"results":"17","hashOfConfig":"13"},{"size":3482,"mtime":1614227013433,"results":"18","hashOfConfig":"13"},{"size":8368,"mtime":1613620160448,"results":"19","hashOfConfig":"13"},{"size":1222,"mtime":1614170291610,"results":"20","hashOfConfig":"13"},{"size":3401,"mtime":1614227052128,"results":"21","hashOfConfig":"13"},{"size":8579,"mtime":1614220623053,"results":"22","hashOfConfig":"13"},{"size":10264,"mtime":1614220607942,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lnf7m2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\index.js",[],["48","49"],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\App.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\reportWebVitals.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pages.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\home.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\login.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pegawai.js",["50","51"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from '../components/navbar'\r\nimport {Button, Modal, Table, Card, Form} from 'react-bootstrap';\r\n\r\nclass Pegawai extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            pegawai: [],  \r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",     \r\n            action: \"\",  \r\n            search: \"\", \r\n            isModalOpen: false,\r\n        }  \r\n        \r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",     \r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_pegawai: item.id_pegawai,\r\n            nama_pegawai: item.nama_pegawai,\r\n            alamat: item.alamat,     \r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        // menampung data nip, nama dan alamat dari form\r\n        // kdalam FOrmData() untuk dikirim \r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n            url = \"http://localhost:2000/pegawai/save\"\r\n        } else {\r\n            url = \"http://localhost:2000/pegawai/update\"\r\n        }\r\n        \r\n        let form = {\r\n            id_pegawai: this.state.id_pegawai,\r\n            nama_pegawai: this.state.nama_pegawai,\r\n            alamat: this.state.alamat\r\n        }\r\n\r\n        // mengirim data ke api untuk disimpan pada database\r\n        axios.post(url, form, this.headerConfig())\r\n        .then(response => {\r\n            // jika proses simPn berhasil, memanggil data yang terbaru\r\n            this.getPegawai();\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n        // menutup form Modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    getPegawai = () => {\r\n        let url = \"http://localhost:2000/pegawai/\";\r\n        // mengakses api untuk mengambil data pegawai\r\n        \r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pegawai\r\n          this.setState({pegawai: response.data.pegawai});\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    \r\n    findPegawai = (event) => {\r\n        let url = \"http://localhost:2000/pegawai/\";\r\n        if (event.keyCode === 13) {\r\n            // menampung data keyword pencarian\r\n            \r\n            let form = {\r\n                find: this.state.search\r\n            }\r\n            // mengakses api untuk mengambil data pegawai\r\n            // berdasarkan keyword\r\n            \r\n            axios.post(url, form, this.headerConfig())\r\n            .then(response => {\r\n                // mengisikan data dari respon api ke array pegawai\r\n                this.setState({pegawai: response.data.pegawai});\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n\r\n    Drop = (id_pegawai) => {\r\n        let url = \"http://localhost:2000/pegawai/\" + id_pegawai;\r\n        // memanggil url api untuk menghappus data pada database\r\n        if (window.confirm('Hapus data ini?')) {\r\n            axios.delete(url, this.headerConfig())\r\n            .then(response => {\r\n                // jika proses hapus data berhasil, memanggil data yang terbaru\r\n                this.getPegawai();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                    <Card.Header className=\"card-header bg-info text-white\" align={'center'}>\r\n                        Data Pegawai\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <input type=\"text\" className=\"form-control mb-2\" \r\n                        name=\"search\" value={this.state.search} onChange={this.bind} \r\n                        onKeyUp={this.findPegawai} placeholder=\"Pencarian...\" />\r\n                        \r\n                        <Button variant=\"success\" onClick={this.handleAdd}>\r\n                            Tambah Data\r\n                        </Button>\r\n\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>  \r\n                                    <th>Nama</th>  \r\n                                    <th>Alamat</th>  \r\n                                    <th>Option</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.pegawai.map((item,index) => {  \r\n                                return (  \r\n                                <tr key={index}>  \r\n                                    <td>{item.id_pegawai}</td>  \r\n                                    <td>{item.nama_pegawai}</td>  \r\n                                    <td>{item.alamat}</td>  \r\n                                    <td>  \r\n                                    <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                                    data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                        Edit  \r\n                                    </Button>  \r\n                                    <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_pegawai)}>  \r\n                                        Hapus  \r\n                                    </Button>  \r\n                                    </td>  \r\n                                </tr>  \r\n                                );  \r\n                            })}\r\n                            </tbody>\r\n                            </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Form Pegawai</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={this.handleSave}>\r\n                        <div className=\"modal-body\">\r\n                            ID\r\n                            <input type=\"number\" name=\"id_pegawai\" value={this.state.id_pegawai} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Nama\r\n                            <input type=\"text\" name=\"nama_pegawai\" value={this.state.nama_pegawai} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Alamat\r\n                            <input type=\"text\" name=\"alamat\" value={this.state.alamat} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">\r\n                                Simpan\r\n                            </button>\r\n                        </div>\r\n                    </form>     \r\n                </Modal>\r\n            </>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Pegawai;","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\components\\navbar.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\register.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran.js",["52","53"],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\siswa.js",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":37,"nodeType":"62","messageId":"63","endLine":4,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":154,"column":5,"nodeType":"66","messageId":"67","endLine":157,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":4,"column":37,"nodeType":"62","messageId":"63","endLine":4,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":154,"column":5,"nodeType":"66","messageId":"67","endLine":157,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":4,"column":37,"nodeType":"62","messageId":"63","endLine":4,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":183,"column":5,"nodeType":"66","messageId":"67","endLine":187,"endColumn":6},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","no-global-assign","no-unsafe-negation"]