[{"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\index.js":"1","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\App.js":"2","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\reportWebVitals.js":"3","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pages.js":"4","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\home.js":"5","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\login.js":"6","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pegawai.js":"7","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\components\\navbar.js":"8","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\register.js":"9","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran.js":"10","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\siswa.js":"11","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran_siswa.js":"12","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\jurusan.js":"13"},{"size":547,"mtime":1611240622459,"results":"14","hashOfConfig":"15"},{"size":294,"mtime":1613407013869,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":860,"mtime":1617236357739,"results":"18","hashOfConfig":"15"},{"size":7631,"mtime":1619760811087,"results":"19","hashOfConfig":"15"},{"size":3482,"mtime":1614227013433,"results":"20","hashOfConfig":"15"},{"size":8368,"mtime":1613620160448,"results":"21","hashOfConfig":"15"},{"size":1556,"mtime":1619760985771,"results":"22","hashOfConfig":"15"},{"size":3401,"mtime":1614227052128,"results":"23","hashOfConfig":"15"},{"size":8579,"mtime":1614220623053,"results":"24","hashOfConfig":"15"},{"size":10264,"mtime":1614220607942,"results":"25","hashOfConfig":"15"},{"size":16960,"mtime":1619446150725,"results":"26","hashOfConfig":"15"},{"size":7605,"mtime":1619441028452,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lnf7m2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\index.js",[],["58","59"],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\App.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\reportWebVitals.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pages.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\home.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\login.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pegawai.js",["60","61"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from '../components/navbar'\r\nimport {Button, Modal, Table, Card, Form} from 'react-bootstrap';\r\n\r\nclass Pegawai extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            pegawai: [],  \r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",     \r\n            action: \"\",  \r\n            search: \"\", \r\n            isModalOpen: false,\r\n        }  \r\n        \r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_pegawai: \"\",\r\n            nama_pegawai: \"\",\r\n            alamat: \"\",     \r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_pegawai: item.id_pegawai,\r\n            nama_pegawai: item.nama_pegawai,\r\n            alamat: item.alamat,     \r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        // menampung data nip, nama dan alamat dari form\r\n        // kdalam FOrmData() untuk dikirim \r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n            url = \"http://localhost:2000/pegawai/save\"\r\n        } else {\r\n            url = \"http://localhost:2000/pegawai/update\"\r\n        }\r\n        \r\n        let form = {\r\n            id_pegawai: this.state.id_pegawai,\r\n            nama_pegawai: this.state.nama_pegawai,\r\n            alamat: this.state.alamat\r\n        }\r\n\r\n        // mengirim data ke api untuk disimpan pada database\r\n        axios.post(url, form, this.headerConfig())\r\n        .then(response => {\r\n            // jika proses simPn berhasil, memanggil data yang terbaru\r\n            this.getPegawai();\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n        // menutup form Modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    getPegawai = () => {\r\n        let url = \"http://localhost:2000/pegawai/\";\r\n        // mengakses api untuk mengambil data pegawai\r\n        \r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pegawai\r\n          this.setState({pegawai: response.data.pegawai});\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    \r\n    findPegawai = (event) => {\r\n        let url = \"http://localhost:2000/pegawai/\";\r\n        if (event.keyCode === 13) {\r\n            // menampung data keyword pencarian\r\n            \r\n            let form = {\r\n                find: this.state.search\r\n            }\r\n            // mengakses api untuk mengambil data pegawai\r\n            // berdasarkan keyword\r\n            \r\n            axios.post(url, form, this.headerConfig())\r\n            .then(response => {\r\n                // mengisikan data dari respon api ke array pegawai\r\n                this.setState({pegawai: response.data.pegawai});\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n\r\n    Drop = (id_pegawai) => {\r\n        let url = \"http://localhost:2000/pegawai/\" + id_pegawai;\r\n        // memanggil url api untuk menghappus data pada database\r\n        if (window.confirm('Hapus data ini?')) {\r\n            axios.delete(url, this.headerConfig())\r\n            .then(response => {\r\n                // jika proses hapus data berhasil, memanggil data yang terbaru\r\n                this.getPegawai();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPegawai()\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                    <Card.Header className=\"card-header bg-info text-white\" align={'center'}>\r\n                        Data Pegawai\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <input type=\"text\" className=\"form-control mb-2\" \r\n                        name=\"search\" value={this.state.search} onChange={this.bind} \r\n                        onKeyUp={this.findPegawai} placeholder=\"Pencarian...\" />\r\n                        \r\n                        <Button variant=\"success\" onClick={this.handleAdd}>\r\n                            Tambah Data\r\n                        </Button>\r\n\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>  \r\n                                    <th>Nama</th>  \r\n                                    <th>Alamat</th>  \r\n                                    <th>Option</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.pegawai.map((item,index) => {  \r\n                                return (  \r\n                                <tr key={index}>  \r\n                                    <td>{item.id_pegawai}</td>  \r\n                                    <td>{item.nama_pegawai}</td>  \r\n                                    <td>{item.alamat}</td>  \r\n                                    <td>  \r\n                                    <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                                    data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                        Edit  \r\n                                    </Button>  \r\n                                    <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_pegawai)}>  \r\n                                        Hapus  \r\n                                    </Button>  \r\n                                    </td>  \r\n                                </tr>  \r\n                                );  \r\n                            })}\r\n                            </tbody>\r\n                            </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Form Pegawai</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={this.handleSave}>\r\n                        <div className=\"modal-body\">\r\n                            ID\r\n                            <input type=\"number\" name=\"id_pegawai\" value={this.state.id_pegawai} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Nama\r\n                            <input type=\"text\" name=\"nama_pegawai\" value={this.state.nama_pegawai} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Alamat\r\n                            <input type=\"text\" name=\"alamat\" value={this.state.alamat} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">\r\n                                Simpan\r\n                            </button>\r\n                        </div>\r\n                    </form>     \r\n                </Modal>\r\n            </>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Pegawai;","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\components\\navbar.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\register.js",[],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran.js",["62","63"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from '../components/navbar'\r\nimport {Button, Modal, Table, Card, Form} from 'react-bootstrap';\r\n\r\nclass Pelanggaran extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            pelanggaran: [],  \r\n            id_pelanggaran: \"\",\r\n            nama_pelanggaran: \"\",\r\n            poin: \"\",\r\n            action: \"\",  \r\n            search: \"\", \r\n            isModalOpen: false,\r\n        }  \r\n        \r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_pelanggaran: \"\",\r\n            nama_pelanggaran: \"\",\r\n            poin: \"\",     \r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_pelanggaran: item.id_pelanggaran,\r\n            nama_pelanggaran: item.nama_pelanggaran,\r\n            poin: item.poin,     \r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        // menampung data nip, nama dan alamat dari form\r\n        // kedalam FormData() untuk dikirim \r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n            url = \"http://localhost:2000/pelanggaran/save\"\r\n        } else {\r\n            url = \"http://localhost:2000/pelanggaran/update\"\r\n        }\r\n        \r\n        let form = {\r\n            id_pelanggaran: this.state.id_pelanggaran,\r\n            nama_pelanggaran: this.state.nama_pelanggaran,\r\n            poin: this.state.poin\r\n        }\r\n\r\n        // mengirim data ke api untuk disimpan pada database\r\n        axios.post(url, form, this.headerConfig())\r\n        .then(response => {\r\n            // jika proses simPn berhasil, memanggil data yang terbaru\r\n            this.getPelanggaran();\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n        // menutup form Modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    getPelanggaran = () => {\r\n        let url = \"http://localhost:2000/pelanggaran\";\r\n        // mengakses api untuk mengambil data pelanggaran\r\n        \r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array pelanggaran\r\n          this.setState({pelanggaran: response.data.pelanggaran});\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    findPelanggaran = (event) => {\r\n        let url = \"http://localhost:2000/pelanggaran/\";\r\n        if (event.keyCode === 13) {\r\n            // menampung data keyword pencarian\r\n            \r\n            let form = {\r\n                find: this.state.search\r\n            }\r\n            // mengakses api untuk mengambil data pelanggaran\r\n            // berdasarkan keyword\r\n            \r\n            axios.post(url, form, this.headerConfig())\r\n            .then(response => {\r\n                // mengisikan data dari respon api ke array pelanggaran\r\n                this.setState({pelanggaran: response.data.pelanggaran});\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPelanggaran()\r\n    }\r\n\r\n    Drop = (id_pelanggaran) => {\r\n        let url = \"http://localhost:2000/pelanggaran/\" + id_pelanggaran;\r\n        // memanggil url api untuk menghappus data pada database\r\n        if (window.confirm('Hapus data ini?')) {\r\n            axios.delete(url, this.headerConfig())\r\n            .then(response => {\r\n                // jika proses hapus data berhasil, memanggil data yang terbaru\r\n                this.getPelanggaran();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getPelanggaran()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                    <Card.Header className=\"card-header bg-info text-white\" align={'center'}>\r\n                        Data Pelanggaran\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <input type=\"text\" className=\"form-control mb-2\" \r\n                        name=\"search\" value={this.state.search} onChange={this.bind} \r\n                        onKeyUp={this.findPelanggaran} placeholder=\"Pencarian...\" />\r\n                        \r\n                        <Button variant=\"success\" onClick={this.handleAdd}>\r\n                            Tambah Data\r\n                        </Button>\r\n\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID Pelanggaran</th>  \r\n                                    <th>Nama Pelanggaran</th>  \r\n                                    <th>Poin</th>  \r\n                                    <th>Option</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.pelanggaran.map((item,index) => {  \r\n                                return (  \r\n                                <tr key={index}>  \r\n                                    <td>{item.id_pelanggaran}</td>  \r\n                                    <td>{item.nama_pelanggaran}</td>  \r\n                                    <td>{item.poin}</td>  \r\n                                    <td>  \r\n                                    <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                                    data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                        Edit  \r\n                                    </Button>  \r\n                                    <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_pelanggaran)}>  \r\n                                        Hapus  \r\n                                    </Button>  \r\n                                    </td>  \r\n                                </tr>  \r\n                                );  \r\n                            })}\r\n                            </tbody>\r\n                            </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Form Pelanggaran</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={this.handleSave}>\r\n                        <div className=\"modal-body\">\r\n                            ID Pelanggaran\r\n                            <input type=\"number\" name=\"id_pelanggaran\" value={this.state.id_pelanggaran} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Nama Pelanggaran\r\n                            <input type=\"text\" name=\"nama_pelanggaran\" value={this.state.nama_pelanggaran} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Poin\r\n                            <input type=\"number\" name=\"poin\" value={this.state.poin} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">\r\n                                Simpan\r\n                            </button>\r\n                        </div>\r\n                    </form>     \r\n                </Modal>\r\n            </>\r\n        );  \r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Pelanggaran;","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\siswa.js",["64","65"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from '../components/navbar'\r\nimport {Button, Modal, Table, Card, Form} from 'react-bootstrap';\r\n\r\nclass Siswa extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            siswa: [],\r\n            jur: [],\r\n            id_siswa:\"\",\r\n            nis:\"\",\r\n            nama_siswa:\"\",\r\n            kelas:\"\",\r\n            jurusan:\"\",\r\n            point:\"\",    \r\n            action: \"\",  \r\n            search: \"\", \r\n            isModalOpen: false,\r\n        }  \r\n        \r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleAdd = () => {\r\n        this.setState({\r\n            id_siswa: \"\",\r\n            nis: \"\",\r\n            nama_siswa: \"\",\r\n            kelas: \"\",\r\n            jurusan: \"\",\r\n            point: \"\",\r\n            action: \"insert\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n            id_siswa: item.id_siswa,\r\n            nis: item.nis,\r\n            nama_siswa: item.nama_siswa,\r\n            kelas: item.kelas,\r\n            jurusan: item.jurusan,\r\n            point: item.point,\r\n            action: \"update\",\r\n            isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        // menampung data nip, nama dan alamat dari form\r\n        // kedalam FormData() untuk dikirim \r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n            url = \"http://localhost:2000/siswa/save\"\r\n        } else {\r\n            url = \"http://localhost:2000/siswa/update\"\r\n        }\r\n        \r\n        let form = {\r\n            id_siswa: this.state.id_siswa,\r\n            nis: this.state.nis,\r\n            nama_siswa: this.state.nama_siswa,\r\n            kelas: this.state.kelas,\r\n            jurusan: this.state.jurusan,\r\n            point: this.state.point\r\n        }\r\n\r\n        // mengirim data ke api untuk disimpan pada database\r\n        axios.post(url, form, this.headerConfig())\r\n        .then(response => {\r\n            // jika proses simPn berhasil, memanggil data yang terbaru\r\n            this.getSiswa();\r\n        })\r\n        // .catch(error => {\r\n        //     console.log(error);\r\n        // });\r\n        // menutup form Modal\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n\r\n    getSiswa = () => {\r\n        let url = \"http://localhost:2000/siswa\";\r\n        // mengakses api untuk mengambil data siswa\r\n        \r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array siswa\r\n          this.setState({siswa: response.data.siswa});\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    getJurusan = () => {\r\n        let url = \"http://localhost:2000/siswa/jurusan\";\r\n        // mengakses api untuk mengambil data siswa>jurusan\r\n        \r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array siswa>jurusan\r\n          this.setState({jur: response.data.jurusan});\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    findSiswa = (event) => {\r\n        let url = \"http://localhost:2000/siswa\";\r\n        if (event.keyCode === 13) {\r\n            // menampung data keyword pencarian\r\n            \r\n            let form = {\r\n                find: this.state.search\r\n            }\r\n            // mengakses api untuk mengambil data pegawai\r\n            // berdasarkan keyword\r\n            \r\n            axios.post(url, form, this.headerConfig())\r\n            .then(response => {\r\n                // mengisikan data dari respon api ke array siswa\r\n                this.setState({siswa: response.data.siswa});\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getSiswa()\r\n        this.getJurusan()\r\n    }\r\n\r\n    Drop = (id_siswa) => {\r\n        let url = \"http://localhost:2000/siswa/\" + id_siswa;\r\n        // memanggil url api untuk menghappus data pada database\r\n        if (window.confirm('Hapus data ini?')) {\r\n            axios.delete(url, this.headerConfig())\r\n            .then(response => {\r\n                // jika proses hapus data berhasil, memanggil data yang terbaru\r\n                this.getSiswa();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // method yang pertama kali dipanggil pada saat load page\r\n        this.getSiswa()\r\n        this.getJurusan()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <NavBar />\r\n                <Card>\r\n                    <Card.Header className=\"card-header bg-info text-white\" align={'center'}>\r\n                        Data Siswa\r\n                    </Card.Header>\r\n\r\n                    <Card.Body>\r\n                        <input type=\"text\" className=\"form-control mb-2\" \r\n                        name=\"search\" value={this.state.search} onChange={this.bind} \r\n                        onKeyUp={this.findSiswa} placeholder=\"Pencarian...\" />\r\n                        \r\n                        <Button variant=\"success\" onClick={this.handleAdd}>\r\n                            Tambah Data\r\n                        </Button>\r\n\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID Siswa</th>\r\n                                    <th>NIS</th>\r\n                                    <th>Nama Siswa</th>\r\n                                    <th>Kelas</th>\r\n                                    <th>Jurusan</th>\r\n                                    <th>Point</th>\r\n                                    <th>Option</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.siswa.map((item,index) => {  \r\n                                return (  \r\n                                <tr key={index}>\r\n                                    <td>{item.id_siswa}</td>\r\n                                    <td>{item.nis}</td>\r\n                                    <td>{item.nama_siswa}</td>\r\n                                    <td>{item.kelas}</td>\r\n                                    <td>{item.jurusan}</td>\r\n                                    <td>{item.point}</td>\r\n                                    <td>  \r\n                                    <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                                    data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                        Edit  \r\n                                    </Button>  \r\n                                    <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_siswa)}>  \r\n                                        Hapus  \r\n                                    </Button>  \r\n                                    </td>  \r\n                                </tr>  \r\n                                );  \r\n                            })}\r\n                            </tbody>\r\n                            </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Form Siswa</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={this.handleSave}>\r\n                        <div className=\"modal-body\">\r\n                            ID Siswa\r\n                            <input type=\"number\" name=\"id_siswa\" value={this.state.id_siswa} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            NIS\r\n                            <input type=\"number\" name=\"nis\" value={this.state.nis} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Nama Siswa\r\n                            <input type=\"text\" name=\"nama_siswa\" value={this.state.nama_siswa} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Kelas\r\n                            <input type=\"text\" name=\"kelas\" value={this.state.kelas} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                            Jurusan\r\n                            <select name=\"jurusan\" value={this.state.jurusan} onChange={this.bind}\r\n                            className=\"form-control\" required> {this.state.jur.map((item)=> {  \r\n                                return ( <option value={item.id_jurusan}>{item.nama_jurusan}</option> )})}\r\n                            </select>\r\n                            Point\r\n                            <input type=\"number\" name=\"point\" value={this.state.point} onChange={this.bind}\r\n                            className=\"form-control\" required />\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-sm btn-success\" type=\"submit\">\r\n                                Simpan\r\n                            </button>\r\n                        </div>\r\n                    </form>     \r\n                </Modal>\r\n            </>\r\n        );  \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Siswa;","E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\pelanggaran_siswa.js",["66","67","68"],"E:\\XI Coding\\2 - API CRUD React\\react1\\src\\pages\\jurusan.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":4,"column":37,"nodeType":"75","messageId":"76","endLine":4,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":154,"column":5,"nodeType":"79","messageId":"80","endLine":157,"endColumn":6},{"ruleId":"73","severity":1,"message":"74","line":4,"column":37,"nodeType":"75","messageId":"76","endLine":4,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":154,"column":5,"nodeType":"79","messageId":"80","endLine":157,"endColumn":6},{"ruleId":"73","severity":1,"message":"74","line":4,"column":37,"nodeType":"75","messageId":"76","endLine":4,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":183,"column":5,"nodeType":"79","messageId":"80","endLine":187,"endColumn":6},{"ruleId":"73","severity":1,"message":"81","line":1,"column":16,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":176,"column":78,"nodeType":"84","messageId":"80","endLine":176,"endColumn":80},{"ruleId":"85","severity":1,"message":"86","line":395,"column":42,"nodeType":"87","endLine":395,"endColumn":106},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]